// const doMath = function (a, b, callback) {
//   const result = callback(a, b);
//   console.log(result);
// };
// const add = function (a, b) {
//   return a + b;
// };
// const sub = function (x, y) {
//   return x - y;
// };
// doMath(2, 3, add);
// doMath(10, 3, sub);

// // inline function
// doMath(2, 3, function (a, b) {
//   return a + b;
// });
// doMath(10, 3, function (x, y) {
//   return x - y;
// });

// ============================================================================================
/*
 * ******Array.prototype.forEach(callback(currentValue, index, array), thisArg)*********
 * - –ü–æ—ç–ª–µ–º–µ–Ω—Ç–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤
 * - –ù–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
 * - –ó–∞–º–µ–Ω—è–µ—Ç –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π for, –µ—Å–ª–∏ –Ω–µ –Ω—É–∂–Ω–æ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å —Ü–∏–∫–ª
 */
// /// **************************************
// const numbers = [5, 10, 15, 20, 25];

// numbers.forEach(function (number) {
//   console.log("number", number);
// });

// console.log(numbers);
// /// **************************************
// ============================================================================================
//  Example 7 - –ú–µ—Ç–æ–¥ forEach
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const logItems = (items) => {
//   console.log(items);
//   items.forEach((item, idx) => console.log(`${idx + 1} - ${item}`));
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);
// ============================================================================================

// Example 8 - –ú–µ—Ç–æ–¥ forEach
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// function printContactsInfo({ names, phones }) {
//   const nameList = names.split(',');
//   const phoneList = phones.split(',');

//   // nameList.forEach((name, idx) => console.log(`${name}: ${phoneList[idx]}`));
//   nameList.forEach((_, idx) =>
//     console.log(`${nameList[idx]}: ${phoneList[idx]}`)
//   );
// }

// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });
// ============================================================================================
// Example 9 - –ú–µ—Ç–æ–¥ forEach
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// function cal—ÅulateAverage(...args) {
//   let total = 0;

//   args.forEach((item) => (total += item));

//   return total / args.length;
// }

// console.log(cal—ÅulateAverage(1, 2, 3, 4)); // 2.5
// console.log(cal—ÅulateAverage(14, 8, 2)); // 8
// console.log(cal—ÅulateAverage(27, 43, 2, 8, 36)); // 23.2
// ============================================================================================
