// ============================================================================================
//                          ----------Task 1(посчитать общую сумму покупок)------------
/*
 * Посчитать общую сумму покупок в корзине
 */
// **************************************
// const cart = [54, 28, 105, 70, 92, 17, 120, 12, 25, 90];
// let total = 0;
// for (let i = 0; i < cart.length; i += 1) {
//   total += cart[i];
//   console.log(cart[i]);
// }
// console.log("Сумма покупок в корзине:", total);
// **************************************
// // variant 2 (for of)
// for (const number of cart) {
//   total += number;
// }
// console.log("Сумма покупок в корзине:", total);
// **************************************
// variant 3 с добавлением налога
// for (let i = 0; i < cart.length; i += 1) {
//   cart[i] = Math.round(cart[i] * 1.1);
//   total += cart[i];
// }
// console.log(cart);
// console.log("Сумма покупок в корзине:", total);
// **************************************
// ============================================================================================

// ============================================================================================
//                          ----------Task 2 (подсчет суммы четных чисел)------------

/*
 * Напиши скрипт который подсчитывает сумму всех чётных чисел в массиве.
 */
// **************************************
// const numbers = [1, 5, 8, 9, 12, 4, 15, 27, 30, 18, 14];
// let total = 0;
// for (const number of numbers) {
//   if (number % 2 === 0) {
//     console.log("Четное -", number);
//     total += number;
//   }
// }
// console.log(total);
// **************************************
// ============================================================================================
//                      ----------Task 3 (поиск нужного логина в массиве)------------
/*
 * Напиши скрипт поиска логина
 * - Если логина нет, вывести сообщение 'Пользователь [логин] не найден.'
 * - Если нашли логин, вывести сообщение 'Пользователь [логин] найден.'
 *
 * - Сначала через for
 * - Потом через for...of
 * - Логика break
 * - Метод includes() с тернарным оператором
 */
// **************************************
// const logins = ["m4ngoDoge", "k1widab3st", "poly1scute", "aj4xth3m4n"];
// const loginToFind = "aj4xth3m4n";
//  let message = `Пользователь ${loginToFind} не найден.`;

// for (let i = 0; i < logins.length; i += 1) {
//   const login = logins[i];

//   console.log('Login: ', login);
//   console.log(`${login} === ${loginToFind}: `, login === loginToFind);

//   if (login === loginToFind) {
//     console.log('Ура, равны!!!');
//     message = `Пользователь ${loginToFind} найден.`;
//     break;
//   }
// }

// console.log(message);
// **************************************
// variant2
// for (const login of logins) {
//   console.log('Login: ', login);
//   console.log(`${login} === ${loginToFind}: `, login === loginToFind);

//   if (login === loginToFind) {
//     console.log('Ура, равны!!!');
//     message = `Пользователь ${loginToFind} найден.`;
//     break;
//   }
// }

// console.log(message);
// **************************************
// variant3
//  const message = logins.includes(loginToFind)
//    ? `Пользователь ${loginToFind} найден.`
//    : `Пользователь ${loginToFind} не найден.`;

//  console.log(message);
// **************************************
// ============================================================================================

// ============================================================================================
//                      ----------Task 4 (поиск наименьшего числа в массиве)------------

/*
 * Напиши скрипт поиска самого маленького числа в массиве,
 * при условии что числа уникальные (не повторяются).
 */
// **************************************

// const numbers = [51, 18, 13, 24, 7, 85, 19];
// let smallestNumber = numbers[0];
// for (const number of numbers) {
//   if (number < smallestNumber) {
//     smallestNumber = number;
//   }
// }
// console.log("Самое маленькое число:", smallestNumber);
// **************************************

// ============================================================================================

// ============================================================================================
//                      ----------Task 5 (обьединение всех элементов массива в строковое значение)------------

/*
 * Напиши скрипт, который объединяет все элементы массива в одно строковое значение.
 * Элементов может быть произвольное кол-во.
 * Пусть элементы массива  в строке будут разделены запятой.
 * - Сначала через for
 * - Потом через join()
 */
// **************************************
// variant 1 через for
// const friends = ["Mango", "Poly", "Kiwi", "Ajax"];
// // let string = "";

// // for (const friend of friends) {
// //   string += friend + ",";
// // }

// // string = string.slice(0, string.length - 1);
// // console.log(string);
// // **************************************
// // variant2 через join
// const string = friends.join(",");
// console.log(friends);
// console.log(string);
// **************************************

// ============================================================================================
// ============================================================================================
/*//                      ----------Task 6 (замена регистра каждого символа на противоположный)------------

 * Напиши скрипт который заменяет регистр каждого символа в строке на противоположный.
 * Например, если строка «JavaScript», то на выходе должена быть строка «jAVAsCRIPT».
 */
// **************************************
// const string = "qWeRTzxCv";
// const letters = string.split("");
// let invertedString = "";

// console.log(letters);

// for (const letter of letters) {
//   console.log(letter);
//   const isInLowerCase = letter === letter.toLowerCase();

//   invertedString += isInLowerCase ? letter.toUpperCase() : letter.toLowerCase();
// }

// console.log("invertedString: ", invertedString);
// **************************************
// ============================================================================================
/*

//============================================================================================
                      ----------Task 7(слагификация)------------


 * Делаем slug в URL из названия статьи (например на dev.to)
 * Заголовок статьи состоит только из букв и пробелов
 *
 * - Нормализируем строку
 * - Разбиваем по словам
 * - Сшиваем в строку с разделителями
 */
// Должно получиться top-10-benefits-of-react-framework
// **************************************

// const title = "Top 10 benefits of React framework";
// const slug = title.toLowerCase().split(" ").join("-");

// console.log(slug);
// **************************************
// ============================================================================================
// ============================================================================================
//   ----------Task 8(сумма элементов двух масивов)------------
/*
 * Напиши скрипт который считает сумму элементов двух массивов.
 */
// **************************************
// const array1 = [5, 10, 15, 20];
// const array2 = [10, 20, 30];
// let total = 0;
// // объединение двух массивов
// const numbers = array1.concat(array2);
// console.log(numbers);

// for (const number of numbers) {
//   total += number;
// }

// console.log(total);
// **************************************
// ============================================================================================

// ============================================================================================
//   ----------Task 9(работа с карточками)------------

/*
 * Работем с коллекцией карточек в trello
 * - Метод splice()
 * - Удалить
 * - Добавить
 * - Обновить
 */

const cards = [
  "Карточка-1",
  "Карточка-2",
  "Карточка-3",
  "Карточка-4",
  "Карточка-5",
];
// console.table(cards);
/*
 * Удаление (по индексу), метод indexOf()
 */

const cardToRemove = "Карточка-3";
// const index = cards.indexOf(cardToRemove);
// console.log(index);

// cards.splice(index, 1);

cards.splice(cards.indexOf(cardToRemove), 1);

console.table(cards);

/*
 * Добавление (по индексу)
 */
// const cardToInsert = 'Карточка-6';
// const index = 3;

// cards.splice(index, 0, cardToInsert);
// console.table(cards);

/*
 * Обновление (по индексу)
 */
// const cardToUpdate = "Карточка-4";
// const index = cards.indexOf(cardToUpdate);

// console.log(index);

// cards.splice(index, 1, "Обновленная карточка-4");

// console.table(cards);
// ============================================================================================
